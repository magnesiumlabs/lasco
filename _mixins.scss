// ============================================================================================= //
//                                            MIXINS                                             //
// ============================================================================================= //

@use "sass:map";
@use "@sass-collective/breakpoint";
@use "@sass-collective/css";
@use "./variables";

@mixin core-styles {

    // --------------------------------- //
    // Display
    // --------------------------------- //

    @each $key in variables.$display {
        .#{$key} {
            @include _declaration(display, $key);
        }
    }

    // --------------------------------- //
    // Flex
    // --------------------------------- //

    .flex {
        @include _classes(flex-wrap, variables.$flex-wrap);

        &-direction {
            @include _classes(flex-direction, variables.$flex-direction);
        }

        &-grow {
            @each $key, $value in variables.$flex-grow {
                @if ($key == default) {
                    @include _declaration(flex-grow, $value);
                } @else {
                    &-#{$key} {
                        @include _declaration(flex-grow, $value);
                    }
                }
            }
        }

        &-shrink {
            @each $key, $value in variables.$flex-shrink {
                @if ($key == default) {
                    @include _declaration(flex-shrink, $value);
                } @else {
                    &-#{$key} {
                        @include _declaration(flex-shrink, $value);
                    }
                }
            }
        }
    }

    // --------------------------------- //
    // Align
    // --------------------------------- //

    .align {
        &-self {
            @include _classes(align-self, variables.$align-self);
        }

        &-content {
            @include _classes(align-content, variables.$align-content);
        }

        &-items {
            @include _classes(align-items, variables.$align-items);
        }
    }

    // --------------------------------- //
    // Justify
    // --------------------------------- //

    .justify {
        &-self {
            @include _classes(justify-self, variables.$justify-self);
        }

        &-content {
            @include _classes(justify-content, variables.$justify-content);
        }

        &-items {
            @include _classes(justify-items, variables.$justify-items);
        }
    }
}

// ------------------------------------------------------------------------- //
// Private mixins
// ------------------------------------------------------------------------- //

@mixin _declaration($property, $value) {
    @include css.declaration($property, $value);

    @include _breakpoint {
        @include css.declaration($property, $value);
    }
}

@mixin _set-class($property, $key) {
    $name: $key;

    @if map.has-key(variables.$names, $key) {
        $name: map.get(variables.$names, $key);
    }

    &-#{$name} {
        @include css.declaration($property, $key);
    }
}

@mixin _classes($property, $values) {
    @each $key in $values {
        @include _set-class($property, $key);
    }

    // --------------------------------- //
    // Breakpoint
    // --------------------------------- //

    @include _breakpoint {
        @each $key in $values {
            @include _set-class($property, $key);
        }
    }
}

@mixin _breakpoint() {
    @each $key, $value in breakpoint.$screens {
        @include breakpoint.up($key) {
            @include css.selector($key) {
                @content;
            }
        }
    }
}

// ------------------------------------------------------------------------- //
// Public mixins
// ------------------------------------------------------------------------- //

// ...
